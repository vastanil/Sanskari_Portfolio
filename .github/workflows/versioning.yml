name: Auto Semantic Versioning

on:
  push:
    branches:
      - master
      - develop
      
permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for full tag history

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "ci@github.com"

      - name: Detect merged branch (for main)
        id: detect
        run: |
          BRANCH="${GITHUB_REF##*/}"
          MERGED_BRANCH="none"

          if [[ "$BRANCH" == "main" ]]; then
            MERGED_BRANCH=$(git log -1 --pretty=%B | grep -oE 'Merge pull request #[0-9]+ from .*/(.*)' | awk '{print $NF}')
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "merged_branch=$MERGED_BRANCH" >> $GITHUB_OUTPUT

      - name: Generate version and tag
        run: |
          BRANCH="${{ steps.detect.outputs.branch }}"
          MERGED="${{ steps.detect.outputs.merged_branch }}"
          DATE=$(date +%Y%m%d)

          # Get latest tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-$(date +%Y%m%d)")
          VERSION_PART=$(echo $LATEST_TAG | cut -d'-' -f1)

          MAJOR=$(echo $VERSION_PART | cut -d'.' -f1 | cut -c2-)
          MINOR=$(echo $VERSION_PART | cut -d'.' -f2)
          PATCH=$(echo $VERSION_PART | cut -d'.' -f3)

          echo "Latest version: $LATEST_TAG"

          if [[ "$BRANCH" == "develop" ]]; then
            ((MINOR++)); PATCH=0
          elif [[ "$BRANCH" == "main" && "$MERGED" == hotfix_* ]]; then
            ((PATCH++))
          elif [[ "$BRANCH" == "main" ]]; then
            ((MAJOR++)); MINOR=0; PATCH=0
          else
            echo "No version rule matched. Exiting."
            exit 0
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH-$DATE"
          echo "New tag will be: $NEW_TAG"

          # Save tag to VERSION
          echo "$NEW_TAG" > VERSION

          # Update version history
          echo "- $NEW_TAG created from branch \`$BRANCH\` on $(date '+%Y-%m-%d %H:%M:%S')" >> VERSION_HISTORY.md

          # Commit and push changes
          git add VERSION VERSION_HISTORY.md
          git commit -m "chore: update version to $NEW_TAG"
          git push origin "$BRANCH"

          # Create tag and push
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"
