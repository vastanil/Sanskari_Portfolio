name: Auto Semantic Versioning

on:
  push:
    branches:
      - master
      - develop

permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code with token
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git credentials
        run: |
          git config --global user.name "Anil Doke"
          git config --global user.email "anild@valueaddsofttech.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Verify GitHub auth
        run: |
          echo "Authenticating with GitHub..."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user

      - name: Debug Git state
        run: |
          git symbolic-ref --short HEAD || echo "DETACHED HEAD"
          git status
          git remote -v
          git tag
          git log -1

      - name: Generate version and push tag
        run: |
          set -x
          BRANCH="${GITHUB_REF##*/}"
          DATE=$(date +%Y%m%d)

          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-$DATE")
          VERSION_PART=$(echo "$LATEST_TAG" | cut -d'-' -f1)

          MAJOR=$(echo "$VERSION_PART" | cut -d'.' -f1 | cut -c2-)
          MINOR=$(echo "$VERSION_PART" | cut -d'.' -f2)
          PATCH=$(echo "$VERSION_PART" | cut -d'.' -f3)

          if [[ "$BRANCH" == "develop" ]]; then
            ((MINOR++)); PATCH=0
          elif [[ "$BRANCH" == "master" ]]; then
            ((MAJOR++)); MINOR=0; PATCH=0
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 0
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH-$DATE"
          echo "New tag: $NEW_TAG"

          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "❌ Tag $NEW_TAG already exists. Skipping."
            exit 0
          fi

          git tag "$NEW_TAG"
          git push origin "$NEW_TAG" || {
            echo "❌ GIT PUSH FAILED"
            git status
            git remote -v
            git log -1
            git branch -a
            exit 1
          }
