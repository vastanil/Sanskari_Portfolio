name: Auto Semantic Versioning

on:
  push:
    branches:
      - master
      - develop

permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "ci@github.com"

      - name: Generate version and tag
        run: |
          BRANCH="${GITHUB_REF##*/}"
          DATE=$(date +%Y%m%d)

          # Get latest tag or fallback
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-$(date +%Y%m%d)")
          VERSION_PART=$(echo "$LATEST_TAG" | cut -d'-' -f1)

          MAJOR=$(echo "$VERSION_PART" | cut -d'.' -f1 | cut -c2-)
          MINOR=$(echo "$VERSION_PART" | cut -d'.' -f2)
          PATCH=$(echo "$VERSION_PART" | cut -d'.' -f3)

          echo "Latest version: $LATEST_TAG"

          if [[ "$BRANCH" == "develop" ]]; then
            ((MINOR++)); PATCH=0
          elif [[ "$BRANCH" == "master" ]]; then
            ((MAJOR++)); MINOR=0; PATCH=0
          else
            echo "Branch $BRANCH is not configured for versioning. Exiting."
            exit 0
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH-$DATE"
          echo "New tag will be: $NEW_TAG"

          # Check if tag already exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "Tag $NEW_TAG already exists. Exiting."
            exit 0
          fi

          # Create and push tag
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG" || { echo "GIT PUSH FAILED"; git status; git remote -v; exit 1; }
