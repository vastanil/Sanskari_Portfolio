name: Simple Auto Versioning

on:
  push:
    branches:
      - '**'  # Trigger on all branches

permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code with token
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git credentials
        run: |
          git config --global user.name "Anil Doke"
          git config --global user.email "anild@valueaddsofttech.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Generate and push version tag
        run: |
          set -x
          DATE=$(date +%Y%m%d)

          # Get latest tag or default
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-$DATE")
          VERSION_PART=$(echo "$LATEST_TAG" | cut -d'-' -f1)

          # Strip 'v' and parse version numbers
          NUM_VERSION=$(echo "$VERSION_PART" | sed 's/^v//')
          MAJOR=$(echo "$NUM_VERSION" | cut -d'.' -f1)
          MINOR=$(echo "$NUM_VERSION" | cut -d'.' -f2)
          PATCH=$(echo "$NUM_VERSION" | cut -d'.' -f3)

          # Safely increment patch
          if [[ "$PATCH" =~ ^[0-9]+$ ]]; then
            ((PATCH++))
          else
            PATCH=1
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH-$DATE"
          echo "üîñ Creating new tag: $NEW_TAG"

          # Skip if tag already exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag $NEW_TAG already exists. Skipping."
            exit 0
          fi

          git tag "$NEW_TAG"
          git push origin "$NEW_TAG" || {
            echo "‚ùå Tag push failed"
            git status
            exit 1
          }

          echo "‚úÖ Tag pushed: $NEW_TAG"
