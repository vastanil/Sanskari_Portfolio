name: Auto Semantic Versioning

on:
  push:
    branches:
      - master
      - develop

permissions:
  contents: write

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"

      - name: Debug Git state
        run: |
          echo "HEAD branch:"
          git symbolic-ref --short HEAD || echo "DETACHED HEAD"

          echo "Git status:"
          git status

          echo "Git remotes:"
          git remote -v

          echo "Existing tags:"
          git tag

          echo "Current commit:"
          git log -1 --oneline

      - name: Generate version and push tag
        run: |
          set -x  # Show all commands

          BRANCH="${GITHUB_REF##*/}"
          DATE=$(date +%Y%m%d)

          # Get latest tag or default
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0-$DATE")
          VERSION_PART=$(echo "$LATEST_TAG" | cut -d'-' -f1)

          MAJOR=$(echo "$VERSION_PART" | cut -d'.' -f1 | cut -c2-)
          MINOR=$(echo "$VERSION_PART" | cut -d'.' -f2)
          PATCH=$(echo "$VERSION_PART" | cut -d'.' -f3)

          if [[ "$BRANCH" == "develop" ]]; then
            ((MINOR++)); PATCH=0
          elif [[ "$BRANCH" == "master" ]]; then
            ((MAJOR++)); MINOR=0; PATCH=0
          else
            echo "❌ Unsupported branch: $BRANCH"
            exit 0
          fi

          NEW_TAG="v$MAJOR.$MINOR.$PATCH-$DATE"
          echo "New tag will be: $NEW_TAG"

          # Check if tag exists
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1; then
            echo "❌ Tag $NEW_TAG already exists. Skipping."
            exit 0
          fi

          echo "Creating new tag on commit:"
          git rev-parse HEAD

          echo "HEAD branch:"
          git symbolic-ref --short HEAD || echo "DETACHED HEAD"

          git tag "$NEW_TAG"
          echo "Tags after tag creation:"
          git tag

          echo "Pushing tag to remote..."
          git push origin "$NEW_TAG" || {
            echo "❌ GIT PUSH FAILED"
            git status
            git log -1
            git branch -a
            git remote -v
            exit 1
          }
